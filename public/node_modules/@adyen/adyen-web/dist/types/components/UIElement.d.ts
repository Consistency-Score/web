import { h } from 'preact';
import BaseElement, { BaseElementProps } from './BaseElement';
import { PaymentAction, PaymentAmount } from '../types';
export interface UIElementProps extends BaseElementProps {
    onChange?: (state: any, element: UIElement) => void;
    onValid?: (state: any, element: UIElement) => void;
    onSubmit?: (state: any, element: UIElement) => void;
    onComplete?: (state: any, element: UIElement) => void;
    onAdditionalDetails?: (state: any, element: UIElement) => void;
    onError?: (error: any, element?: UIElement) => void;
    challengeWindowSize?: string;
    name?: string;
    amount?: PaymentAmount;
    /**
     * Show/Hide pay button
     * @defaultValue true
     */
    showPayButton?: boolean;
}
export declare class UIElement<P extends UIElementProps = any> extends BaseElement<P> {
    protected componentRef: any;
    elementRef: any;
    constructor(props: P);
    setState(newState: object): void;
    onChange(): object;
    onValid(): {
        data: any;
    };
    startPayment(): Promise<any>;
    submit(): void;
    onComplete(state: any): void;
    showValidation(): this;
    setStatus(status: any): this;
    handleAction(action: PaymentAction): UIElement<any>;
    get isValid(): boolean;
    /**
     * Get the element icon URL for the current environment
     */
    get icon(): string;
    /**
     * Get the element displayable name
     */
    get displayName(): string;
    payButton: (props: any) => h.JSX.Element;
}
export default UIElement;
