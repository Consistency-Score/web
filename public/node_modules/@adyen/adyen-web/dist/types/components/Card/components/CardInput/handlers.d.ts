import { CbObjOnFocus, CbObjOnBrand } from '../../../internal/SecuredFields/lib/types';
import { SFPState } from '../../../internal/SecuredFields/SecuredFieldsProvider';
declare function validateCardInput(): void;
declare function handleAddress(address: any): void;
/**
 * Saves the KCP Authentication details in state
 */
declare function handleKCPAuthentication(data: object, valid: object): void;
/**
 * Saves the storeDetails in state
 */
declare function handleOnStoreDetails(storeDetails: boolean): void;
/**
 * Saves the holderName in state
 */
declare function handleHolderName(e: Event): void;
declare function handleInstallments(installments: any): void;
declare function handleSecuredFieldsChange(newState: SFPState): void;
/**
 * Saves the card brand in state
 */
declare function handleOnBrand(cardInfo: CbObjOnBrand): void;
/**
 * Saves the currently focused element in state
 */
declare function handleFocus(e: CbObjOnFocus): void;
/**
 * Handler for the select element added in response to the /binLookup call
 */
declare function handleAdditionalDataSelection(e: Event): void;
declare const _default: {
    handleFocus: typeof handleFocus;
    handleAddress: typeof handleAddress;
    handleKCPAuthentication: typeof handleKCPAuthentication;
    handleOnStoreDetails: typeof handleOnStoreDetails;
    handleHolderName: typeof handleHolderName;
    handleInstallments: typeof handleInstallments;
    handleSecuredFieldsChange: typeof handleSecuredFieldsChange;
    handleOnBrand: typeof handleOnBrand;
    handleAdditionalDataSelection: typeof handleAdditionalDataSelection;
    validateCardInput: typeof validateCardInput;
};
export default _default;
