import { Component } from 'preact';
import UIElement from '../../UIElement';
import { DropinComponentProps } from '../types';
import './DropinComponent.scss';
import { OrderStatus } from '../../../types';
interface DropinStatus {
    type: 'loading' | 'ready' | 'success' | 'error';
}
interface DropinComponentState {
    elements: any[];
    status: DropinStatus;
    activePaymentMethod: UIElement;
    cachedPaymentMethods: object;
    isDisabling: boolean;
    orderStatus: OrderStatus;
}
export declare class DropinComponent extends Component<DropinComponentProps, DropinComponentState> {
    state: DropinComponentState;
    componentDidMount(): void;
    prepareDropinData: () => void;
    private setStatus;
    private setActivePaymentMethod;
    componentDidUpdate(prevProps: any, prevState: any): void;
    private handleOnSelectPaymentMethod;
    private handleDisableStoredPaymentMethod;
    closeActivePaymentMethod(): void;
    render(props: any, { elements, status, activePaymentMethod, cachedPaymentMethods }: {
        elements: any;
        status: any;
        activePaymentMethod: any;
        cachedPaymentMethods: any;
    }): any;
}
export default DropinComponent;
